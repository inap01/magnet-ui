@use "../../lib/design-tokens";
@use "../../lib/shapes";
@use "../../lib/spacing";
@use "../../lib/transition";

@use "./variables";

@mixin Checkbox() {
    position: relative;
    @include spacing.MarginBottom(4);
}

@mixin CheckboxInner() {
    display: flex;
}

@mixin CheckboxInput() {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    height: variables.$checkbox-size;
    width: variables.$checkbox-size;
    border: 2px solid;
    @include shapes.Shape(xs);
    @include transition.Transition((border-color, background-color));

    input {
        display: none;
    }
}

@mixin CheckboxLabel() {
    position: relative;
    display: flex;
    cursor: pointer;
    @include spacing.MarginLeft(variables.$checkbox-space);
}

@mixin CheckboxCheckmark() {
    position: absolute;
    top: -2px;
    left: -2px;
    opacity: 0;
    transform: scale(0.5) rotate(-90deg);
    @include transition.Transition((transform, opacity));

    &.magnet-checkbox--checkmark-show {
        opacity: 1;
        transform: scale(1) rotate(0deg);
    }
}

@mixin CheckboxDisabled() {
    .magnet-checkbox--input {
        cursor: not-allowed;

        .magnet-checkbox--checkmark {
            cursor: not-allowed;
        }
    }

    .magnet-checkbox--label {
        cursor: not-allowed;
    }
}

@mixin CheckboxTheme($colorMode) {
    &.magnet-checkbox {
        &:not(.magnet-checkbox--has-value) {
            .magnet-checkbox--input {
                border-color: design-tokens.getTokenColor(border, $colorMode);
                background-color: transparent;
            }
        }
        &.magnet-checkbox--has-value {
            .magnet-checkbox--input {
                border-color: design-tokens.getTokenColor(primary, $colorMode);
                background-color: design-tokens.getTokenColor(
                    primary,
                    $colorMode
                );
            }
        }

        .magnet-checkbox--checkmark {
            color: design-tokens.getTokenColor(on-primary, $colorMode);
        }

        &.magnet-checkbox--error {
            &:not(.magnet-checkbox--has-value) {
                .magnet-checkbox--input {
                    border-color: design-tokens.getTokenColor(
                        error,
                        $colorMode
                    );
                }
            }
            &.magnet-checkbox--has-value {
                .magnet-checkbox--input {
                    border-color: design-tokens.getTokenColor(
                        error,
                        $colorMode
                    );
                    background-color: design-tokens.getTokenColor(
                        error,
                        $colorMode
                    );
                }
            }
        }

        &.magnet-checkbox--disabled {
            &:not(.magnet-checkbox--has-value) {
                .magnet-checkbox--input {
                    border-color: design-tokens.getTokenColor(
                        disabled,
                        $colorMode
                    );
                }
            }
            &.magnet-checkbox--has-value {
                .magnet-checkbox--input {
                    border-color: design-tokens.getTokenColor(
                        disabled,
                        $colorMode
                    );
                    background-color: design-tokens.getTokenColor(
                        disabled,
                        $colorMode
                    );
                }
            }
        }
    }
}
