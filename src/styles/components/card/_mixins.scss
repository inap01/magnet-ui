@use "../../lib/design-tokens";
@use "../../lib/shapes";
@use "../../lib/spacing";
@use "../../lib/transition";
@use "../../lib/typography";

@use "./variables";

@mixin Card() {
    position: relative;
    border-width: thin;
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 100%;
    outline: none;
    text-decoration: none;
    overflow-wrap: break-word;
    white-space: normal;
    @include shapes.Shape(lg);
    @include transition.Transition((width, height));

    > * {
        &:first-child {
            border-top-left-radius: inherit;
            border-top-right-radius: inherit;
        }
        &:last-child {
            border-bottom-left-radius: inherit;
            border-bottom-right-radius: inherit;
        }
    }

    &.magnet-card--outlined {
        background-color: transparent;
        border: 1px solid;
    }

    &.magnet-card--disabled {
        cursor: default;
    }
}

@mixin CardTitle() {
    display: flex;
    align-items: flex-start;
    @include spacing.PaddingTop(variables.$card-title-padding-top);
    @include spacing.PaddingBottom(variables.$card-title-padding-bottom);
    @include spacing.PaddingHorizontal(
        variables.$card-title-padding-horizontal
    );
    @include typography.Typography(variables.$card-title-typography);
}

@mixin CardBody() {
    @include spacing.Padding(variables.$card-body-padding);
}

@mixin CardActions() {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    @include spacing.PaddingHorizontal(
        variables.$card-actions-padding-horizontal
    );
    @include spacing.PaddingVertical(variables.$card-actions-padding-vertical);

    > .magnet-button {
        @include spacing.MarginLeft(2);
    }
}

@mixin CardTheme($colorMode) {
    &.magnet-card {
        background-color: design-tokens.getTokenColor(surface, $colorMode);
        border-color: design-tokens.getTokenColor(border, $colorMode);
        color: design-tokens.getTokenColor(on-surface, $colorMode);

        &.magnet-card--filled {
            background-color: design-tokens.getTokenColor(
                primary-container,
                $colorMode
            );
            color: design-tokens.getTokenColor(
                on-primary-container,
                $colorMode
            );
        }
    }
}
