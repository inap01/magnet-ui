{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/radio/radio.scss","../../../../src/styles/components/radio/_mixins.scss","../../../../src/styles/lib/_spacing.scss","../../../../src/styles/components/radio/_variables.scss","../../../../src/styles/lib/_shapes.scss","../../../../src/styles/lib/_transition.scss"],"names":[],"mappings":"AAMA,cCCI,kBCaA,mBFXA,mCCGA,qEAIA,kBACA,oBACA,eACA,OEnBS,KFoBT,MEpBS,KFqBT,iBGTI,oBCeJ,WARiB,mDASjB,YAHiB,2EJCb,aDXI,iFCuBR,kBACA,QACA,SACA,UEtCmB,KFuCnB,UEvCmB,KFwCnB,WExCmB,KFyCnB,WEzCmB,KF0CnB,UACA,mBGlCI,oBCeJ,WARiB,qJASjB,YAHiB,mCJyBjB,8GACI,UACA,mBDhCA,wDCWJ,kBACA,aACA,eCTA,iBDiCA,0DACI,mBAEA,mFACI,mBAIR,0DACI,mBDjCA,6EACI,+BACA,6BAIJ,uEACI,+BACA,6BAIR,mDACI,mCAIA,mEACI,6BAGJ,uEACI,iCAKJ,sEACI,+BAGJ,0EACI,mCAQJ,4EACI,+BACA,6BAIJ,sEACI,+BACA,6BAIR,kDACI,mCAIA,kEACI,6BAGJ,sEACI,iCAKJ,qEACI,+BAGJ,yEACI","file":"radio.css","sourcesContent":["@use \"../../lib/design-tokens\";\n\n@use './mixins';\n@use './variables';\n\n// Basic Styles\n.magnet-radio {\n    @include mixins.Radio();\n\n    .magnet-radio--inner {\n        @include mixins.RadioInner();\n\n        .magnet-radio--input {\n            @include mixins.RadioInput();\n\n            .magnet-radio--checkmark {\n                @include mixins.RadioCheckmark();\n            }\n        }\n\n        .magnet-radio--label {\n            @include mixins.RadioLabel();\n        }\n    }\n\n    &.magnet-radio--disabled {\n        @include mixins.RadioDisabled();\n    }\n}\n\n// Light Theme\n.theme-light.magnet-radio {\n    &:not(.magnet-radio--has-value) {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(border, light);\n            background-color: transparent;\n        }\n    }\n    &.magnet-radio--has-value {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(primary, light);\n            background-color: transparent;\n        }\n    }\n\n    .magnet-radio--checkmark {\n        background-color: design-tokens.getTokenColor(primary, light);\n    }\n\n    &.magnet-radio--error {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(error, light);\n        }\n\n        .magnet-radio--checkmark {\n            background-color: design-tokens.getTokenColor(error, light);\n        }\n    }\n\n    &.magnet-radio--disabled {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(disabled, light);\n        }\n\n        .magnet-radio--checkmark {\n            background-color: design-tokens.getTokenColor(disabled, light);\n        }\n    }\n}\n\n// Dark Theme\n.theme-dark.magnet-radio {\n    &:not(.magnet-radio--has-value) {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(border, dark);\n            background-color: transparent;\n        }\n    }\n    &.magnet-radio--has-value {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(primary, dark);\n            background-color: transparent;\n        }\n    }\n\n    .magnet-radio--checkmark {\n        background-color: design-tokens.getTokenColor(primary, dark);\n    }\n\n    &.magnet-radio--error {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(error, dark);\n        }\n\n        .magnet-radio--checkmark {\n            background-color: design-tokens.getTokenColor(error, dark);\n        }\n    }\n\n    &.magnet-radio--disabled {\n        .magnet-radio--input {\n            border-color: design-tokens.getTokenColor(disabled, dark);\n        }\n\n        .magnet-radio--checkmark {\n            background-color: design-tokens.getTokenColor(disabled, dark);\n        }\n    }\n}\n","@use \"../../lib/shapes\";\n@use \"../../lib/spacing\";\n@use \"../../lib/transition\";\n\n@use \"./variables\";\n\n@mixin Radio() {\n    position: relative;\n    @include spacing.MarginBottom(4);\n}\n\n@mixin RadioInner() {\n    display: flex;\n}\n\n@mixin RadioInput() {\n    position: relative;\n    display: inline-flex;\n    cursor: pointer;\n    height: variables.$radio-size;\n    width: variables.$radio-size;\n    border: 2px solid;\n    @include shapes.Shape(full);\n    @include transition.Transition((border-color));\n\n    input {\n        display: none;\n    }\n}\n\n@mixin RadioLabel() {\n    position: relative;\n    display: flex;\n    cursor: pointer;\n    @include spacing.MarginLeft(variables.$radio-space);\n}\n\n@mixin RadioCheckmark() {\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    min-width: variables.$radio-checkmark-size;\n    max-width: variables.$radio-checkmark-size;\n    min-height: variables.$radio-checkmark-size;\n    max-height: variables.$radio-checkmark-size;\n    opacity: 0;\n    transform: scale(0);\n    @include shapes.Shape(full);\n    @include transition.Transition((transform, opacity, background-color));\n\n    &.magnet-radio--checkmark-show {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n@mixin RadioDisabled() {\n    .magnet-radio--input {\n        cursor: not-allowed;\n\n        .magnet-radio--checkmark {\n            cursor: not-allowed;\n        }\n    }\n\n    .magnet-radio--label {\n        cursor: not-allowed;\n    }\n}\n","@use \"sass:map\";\n\n@use \"../variables/spacing\";\n\n@function spacing($size) {\n    @if ($size == \"auto\") {\n        @return auto;\n    }\n    @return spacing.$spacing * $size;\n}\n\n@mixin Margin($size) {\n    margin: spacing($size);\n}\n\n@mixin MarginTop($size) {\n    margin-top: spacing($size);\n}\n\n@mixin MarginBottom($size) {\n    margin-bottom: spacing($size);\n}\n\n@mixin MarginLeft($size) {\n    margin-left: spacing($size);\n}\n\n@mixin MarginRight($size) {\n    margin-right: spacing($size);\n}\n\n@mixin MarginHorizontal($size) {\n    margin-left: spacing($size);\n    margin-right: spacing($size);\n}\n\n@mixin MarginVertical($size) {\n    margin-top: spacing($size);\n    margin-bottom: spacing($size);\n}\n\n@mixin Padding($size) {\n    padding: spacing($size);\n}\n\n@mixin PaddingTop($size) {\n    padding-top: spacing($size);\n}\n\n@mixin PaddingBottom($size) {\n    padding-bottom: spacing($size);\n}\n\n@mixin PaddingLeft($size) {\n    padding-left: spacing($size);\n}\n\n@mixin PaddingRight($size) {\n    padding-right: spacing($size);\n}\n\n@mixin PaddingHorizontal($size) {\n    padding-left: spacing($size);\n    padding-right: spacing($size);\n}\n\n@mixin PaddingVertical($size) {\n    padding-top: spacing($size);\n    padding-bottom: spacing($size);\n}\n","$radio-size: 22px;\n$radio-space: 3;\n\n$radio-checkmark-size: 12px;\n","@use \"sass:map\";\n\n@use \"../variables/shapes\";\n\n@function shape($size) {\n    @return map.get(shapes.$shape-sizes, $size);\n}\n\n@mixin Shape($size) {\n    @if ($size == \"none\") {\n        border-radius: 0;\n    } @else if ($size == \"full\") {\n        border-radius: 999px;\n    } @else {\n        border-radius: shape($size) shape($size) shape($size) shape($size);\n    }\n}\n\n@mixin ShapeTop($size) {\n    border-radius: shape($size) shape($size) 0 0;\n}\n\n@mixin ShapeBottom($size) {\n    border-radius: 0 0 shape($size) shape($size);\n}\n\n@mixin ShapeLeft($size) {\n    border-radius: shape($size) 0 0 shape($size);\n}\n\n@mixin ShapeRight($size) {\n    border-radius: 0 shape($size) shape($size) 0;\n}\n","@mixin Transition(\n    $prop,\n    $time: 300ms,\n    $easing: cubic-bezier(0.4, 0, 0.2, 1),\n    $delay: 0s\n) {\n    $willChange: ();\n    $transition: ();\n    @for $i from 1 through length($prop) {\n        @for $j from 0 to (length($prop)) - (length($time)) {\n            $time: join($time, nth($time, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($easing)) {\n            $easing: join($easing, nth($easing, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($delay)) {\n            $delay: join($delay, nth($delay, -1));\n        }\n\n        $transition: append(\n            $transition,\n            (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),\n            $separator: comma\n        );\n\n        $willChange: append($willChange, nth($prop, $i), $separator: comma);\n    }\n    transition: $transition;\n    will-change: $willChange;\n}\n"]}