{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/select/select.scss","../../../../src/styles/components/input/_input.scss","../../../../src/styles/lib/_shapes.scss","../../../../src/styles/lib/_spacing.scss","../../../../src/styles/lib/_transition.scss","../../../../src/styles/components/input/_variables.scss","../../../../src/styles/lib/_typography.scss","../../../../src/styles/components/select/_mixins.scss"],"names":[],"mappings":"AAKA,eCGI,aACA,sBACA,WCSA,0BCCA,mBHZA,yCCSA,kBACA,aACA,mBACA,uBACA,sBACA,wBEwCA,kBACA,mBFtCA,gDACI,WACA,kBACA,YACA,OACA,WACA,SGJJ,WARiB,4CASjB,YAHiB,MJdb,sEGKJ,gBAYA,kBHbI,yEC4BJ,kBACA,aACA,mBACA,YACA,mBACA,WI/CW,KLiBH,+ECkCR,kBACA,SACA,OACA,sBACA,cACA,gBACA,uBACA,mBACA,oBACA,cACA,eACA,WACA,mBGrCA,WARiB,8LASjB,YAHiB,sCEpBjB,eACA,gBACA,iBACA,iBNcQ,+ECqDR,cACA,eACA,YACA,WACA,YACA,6BACA,kBACA,aACA,oBACA,cK/EA,eACA,gBACA,iBACA,iBHsCA,iBAIA,mBH1BY,eAIR,qEGZJ,gBAQA,iBFaA,qEACI,WDII,wIC4BR,2BKjEA,eACA,gBACA,iBACA,iBNyCI,iEACI,mBACA,6BAEA,uEACI,mBO/CR,qDACI,+BACA,mCAIA,wBAKA,4DACI,mCAQJ,sDACI,wBAKJ,0EACI,6BACA,iCAIA,sBAKA,iFACI,iCAQJ,2EACI,sBAMR,6EACI,+BAIA,mCAIA,wBA9DR,kEACI,+BACA,mCAIA,wBAKA,yEACI,mCAQJ,mEACI,wBAKJ,uFACI,6BACA,iCAIA,sBAKA,8FACI,iCAQJ,wFACI,sBAMR,0FACI,+BAIA,mCAIA","file":"select.css","sourcesContent":["@use \"../input/input\";\n\n@use './mixins';\n\n// Basic Styles\n.magnet-select {\n    @include input.Input();\n\n    .magnet-select--container {\n        @include input.InputContainer();\n\n        .magnet-select--prepend-icon {\n            @include input.InputPrependIcon();\n        }\n\n        .magnet-select--inner-container {\n            @include input.InputInnerContainer();\n\n            label {\n                @include input.InputLabel();\n            }\n\n            input {\n                @include input.InputElement();\n                cursor: pointer;\n            }\n        }\n\n        .magnet-select--append-icon {\n            @include input.InputAppendIcon();\n        }\n    }\n\n    &.magnet-select--focus {\n        .magnet-select--container {\n            @include input.InputContainerWithFocus();\n        }\n    }\n\n    &.magnet-select--value,\n    &.magnet-select--focus {\n        .magnet-select--container {\n            label {\n                @include input.InputLabelWithValueOrFocus();\n            }\n        }\n    }\n\n    &.magnet-select--disabled {\n        .magnet-select--container {\n            cursor: not-allowed;\n            background-color: transparent;\n\n            input {\n                cursor: not-allowed;\n            }\n        }\n    }\n}\n\n// Light Theme\n.theme-light {\n    @include mixins.SelectTheme(light);\n}\n\n// Dark Theme\n.theme-dark.magnet-select {\n    @include mixins.SelectTheme(dark);\n}\n","@use '../../lib/shapes';\n@use '../../lib/spacing';\n@use '../../lib/transition';\n@use '../../lib/typography';\n\n@use './variables';\n\n@mixin Input() {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    @include shapes.ShapeTop(sm);\n    @include spacing.MarginBottom(variables.$input-margin-bottom);\n}\n\n@mixin InputContainer() {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    border-radius: inherit;\n    border-bottom: 1px solid;\n    @include spacing.PaddingHorizontal(variables.$input-padding-horizontal);\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        bottom: -1px;\n        left: 0;\n        height: 2px;\n        width: 0%;\n        @include transition.Transition((width));\n    }\n}\n\n@mixin InputContainerWithFocus() {\n    &:before {\n        width: 100%;\n    }\n}\n\n@mixin InputInnerContainer() {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    align-items: center;\n    min-height: variables.$input-height;\n}\n\n@mixin InputLabel() {\n    position: absolute;\n    top: spacing.spacing(4);\n    left: 0;\n    letter-spacing: normal;\n    max-width: 90%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    pointer-events: none;\n    line-height: 1;\n    min-height: 8px;\n    right: auto;\n    color: currentColor;\n    @include transition.Transition((transform, font-size, font-weight, color));\n    @include typography.Typography(\"body\");\n}\n\n@mixin InputLabelWithValueOrFocus() {\n    transform: translateY(-40%);\n    @include typography.Typography(\"label\");\n}\n\n@mixin InputElement() {\n    flex: 1 1 auto;\n    max-width: 100%;\n    min-width: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    border-style: none;\n    outline: none;\n    font-family: inherit;\n    color: inherit;\n    @include typography.Typography(\"body\");\n    @include spacing.PaddingTop(variables.$input-padding-top);\n    @include spacing.PaddingBottom(variables.$input-padding-bottom);\n}\n\n@mixin InputPrependIcon() {\n    @include spacing.MarginTop(4.5);\n    @include spacing.MarginRight(variables.$input-icon-margin);\n}\n\n@mixin InputAppendIcon() {\n    @include spacing.MarginTop(4.5);\n    @include spacing.MarginLeft(variables.$input-icon-margin);\n}\n\n@mixin InputContainerOutlined() {\n    border: 1px solid;\n    background-color: transparent;\n}\n","@use \"sass:map\";\n\n@use \"../variables/shapes\";\n\n@function shape($size) {\n    @return map.get(shapes.$shape-sizes, $size);\n}\n\n@mixin Shape($size) {\n    @if ($size == \"none\") {\n        border-radius: 0;\n    } @else if ($size == \"full\") {\n        border-radius: 999px;\n    } @else {\n        border-radius: shape($size) shape($size) shape($size) shape($size);\n    }\n}\n\n@mixin ShapeTop($size) {\n    border-radius: shape($size) shape($size) 0 0;\n}\n\n@mixin ShapeBottom($size) {\n    border-radius: 0 0 shape($size) shape($size);\n}\n\n@mixin ShapeLeft($size) {\n    border-radius: shape($size) 0 0 shape($size);\n}\n\n@mixin ShapeRight($size) {\n    border-radius: 0 shape($size) shape($size) 0;\n}\n","@use \"sass:map\";\n\n@use \"../variables/spacing\";\n\n@function spacing($size) {\n    @if ($size == \"auto\") {\n        @return auto;\n    }\n    @return spacing.$spacing * $size;\n}\n\n@mixin Margin($size) {\n    margin: spacing($size);\n}\n\n@mixin MarginTop($size) {\n    margin-top: spacing($size);\n}\n\n@mixin MarginBottom($size) {\n    margin-bottom: spacing($size);\n}\n\n@mixin MarginLeft($size) {\n    margin-left: spacing($size);\n}\n\n@mixin MarginRight($size) {\n    margin-right: spacing($size);\n}\n\n@mixin MarginHorizontal($size) {\n    margin-left: spacing($size);\n    margin-right: spacing($size);\n}\n\n@mixin MarginVertical($size) {\n    margin-top: spacing($size);\n    margin-bottom: spacing($size);\n}\n\n@mixin Padding($size) {\n    padding: spacing($size);\n}\n\n@mixin PaddingTop($size) {\n    padding-top: spacing($size);\n}\n\n@mixin PaddingBottom($size) {\n    padding-bottom: spacing($size);\n}\n\n@mixin PaddingLeft($size) {\n    padding-left: spacing($size);\n}\n\n@mixin PaddingRight($size) {\n    padding-right: spacing($size);\n}\n\n@mixin PaddingHorizontal($size) {\n    padding-left: spacing($size);\n    padding-right: spacing($size);\n}\n\n@mixin PaddingVertical($size) {\n    padding-top: spacing($size);\n    padding-bottom: spacing($size);\n}\n","@mixin Transition(\n    $prop,\n    $time: 300ms,\n    $easing: cubic-bezier(0.4, 0, 0.2, 1),\n    $delay: 0s\n) {\n    $willChange: ();\n    $transition: ();\n    @for $i from 1 through length($prop) {\n        @for $j from 0 to (length($prop)) - (length($time)) {\n            $time: join($time, nth($time, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($easing)) {\n            $easing: join($easing, nth($easing, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($delay)) {\n            $delay: join($delay, nth($delay, -1));\n        }\n\n        $transition: append(\n            $transition,\n            (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),\n            $separator: comma\n        );\n\n        $willChange: append($willChange, nth($prop, $i), $separator: comma);\n    }\n    transition: $transition;\n    will-change: $willChange;\n}\n","$input-border-radius: 18px;\n$input-height: 56px;\n$input-padding-top: 6;\n$input-padding-bottom: 2;\n$input-padding-horizontal: 4;\n$input-margin-bottom: 4;\n\n$input-icon-margin: 4;\n\n$input-hint-margin-top: 1;\n","@use \"sass:map\";\n\n@use \"../variables/typography\";\n\n@mixin Typography($name) {\n    font-size: map-get(map-get(typography.$typography, $name), \"font-size\");\n    font-weight: map-get(map-get(typography.$typography, $name), \"font-weight\");\n    line-height: map-get(map-get(typography.$typography, $name), \"line-height\");\n    letter-spacing: map-get(\n        map-get(typography.$typography, $name),\n        \"letter-spacing\"\n    );\n}\n\n@mixin CreateTypographyClass($typographyName) {\n    .display-#{$typographyName} {\n        @include Typography($typographyName);\n    }\n}\n","@use \"../../lib/design-tokens\";\n@use \"../../lib/spacing\";\n\n@use \"./variables\";\n\n@mixin SelectTheme($colorMode) {\n    &.magnet-select {\n        .magnet-select--container {\n            border-color: design-tokens.getTokenColor(border, $colorMode);\n            background-color: design-tokens.getTokenColor(\n                primary-container,\n                $colorMode\n            );\n            color: design-tokens.getTokenColor(\n                on-primary-container,\n                $colorMode\n            );\n\n            &:before {\n                background-color: design-tokens.getTokenColor(\n                    primary,\n                    $colorMode\n                );\n            }\n        }\n\n        &.magnet-select--focus {\n            label {\n                color: design-tokens.getTokenColor(primary, $colorMode);\n            }\n        }\n\n        &.magnet-select--error {\n            .magnet-select--container {\n                border-color: design-tokens.getTokenColor(error, $colorMode);\n                background-color: design-tokens.getTokenColor(\n                    error-container,\n                    $colorMode\n                );\n                color: design-tokens.getTokenColor(\n                    on-error-container,\n                    $colorMode\n                );\n\n                &:before {\n                    background-color: design-tokens.getTokenColor(\n                        error,\n                        $colorMode\n                    );\n                }\n            }\n\n            &.magnet-select--focus {\n                label {\n                    color: design-tokens.getTokenColor(error, $colorMode);\n                }\n            }\n        }\n\n        &.magnet-select--disabled {\n            .magnet-select--container {\n                border-color: design-tokens.getTokenColor(\n                    on-disabled,\n                    $colorMode\n                );\n                background-color: design-tokens.getTokenColor(\n                    disabled,\n                    $colorMode\n                );\n                color: design-tokens.getTokenColor(on-disabled, $colorMode);\n            }\n        }\n    }\n}\n"]}