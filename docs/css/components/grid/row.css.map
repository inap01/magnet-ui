{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/grid/row.scss","../../../../src/styles/components/grid/_mixins.scss","../../../../src/styles/lib/_spacing.scss"],"names":[],"mappings":"AAGA,YCqBI,aACA,eACA,cCdA,YDiBA,wBCbA,eDiBA,mCACI","file":"row.css","sourcesContent":["@use './variables';\n@use './mixins';\n\n.magnet-row {\n    @include mixins.Row();\n}\n","@use \"sass:math\";\n\n@use \"../../lib/spacing\";\n@use \"../../variables/breakpoints\" as breakpointVariables;\n\n@use \"./variables\";\n\n@mixin Container() {\n    width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n    @include spacing.Padding(variables.$container-spacing-side);\n\n    &.magnet-container--fluid {\n        max-width: 100%;\n    }\n}\n\n@mixin BreakpointContainer($bpItem) {\n    max-width: map-get(breakpointVariables.$breakpoints, $bpItem) -\n        spacing.spacing(variables.$container-spacing-side);\n}\n\n@mixin Row() {\n    display: flex;\n    flex-wrap: wrap;\n    flex: 0 1 auto;\n    @include spacing.Margin(-2);\n\n    & + .magnet-row {\n        @include spacing.MarginTop(2);\n    }\n\n    &.magnet-row--no-gutters {\n        margin: 0;\n    }\n}\n\n@mixin Column() {\n    width: 100%;\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%;\n    @include spacing.Padding(2);\n}\n\n@mixin BreakpointColumn($size) {\n    flex: 0 0 percentage(math.div($size, 12));\n    max-width: percentage(math.div($size, 12));\n\n    @if ($size == 0) {\n        @include spacing.Padding(0);\n    }\n}\n","@use \"sass:map\";\n\n@use \"../variables/spacing\";\n\n@function spacing($size) {\n    @if ($size == \"auto\") {\n        @return auto;\n    }\n    @return spacing.$spacing * $size;\n}\n\n@mixin Margin($size) {\n    margin: spacing($size);\n}\n\n@mixin MarginTop($size) {\n    margin-top: spacing($size);\n}\n\n@mixin MarginBottom($size) {\n    margin-bottom: spacing($size);\n}\n\n@mixin MarginLeft($size) {\n    margin-left: spacing($size);\n}\n\n@mixin MarginRight($size) {\n    margin-right: spacing($size);\n}\n\n@mixin MarginHorizontal($size) {\n    margin-left: spacing($size);\n    margin-right: spacing($size);\n}\n\n@mixin MarginVertical($size) {\n    margin-top: spacing($size);\n    margin-bottom: spacing($size);\n}\n\n@mixin Padding($size) {\n    padding: spacing($size);\n}\n\n@mixin PaddingTop($size) {\n    padding-top: spacing($size);\n}\n\n@mixin PaddingBottom($size) {\n    padding-bottom: spacing($size);\n}\n\n@mixin PaddingLeft($size) {\n    padding-left: spacing($size);\n}\n\n@mixin PaddingRight($size) {\n    padding-right: spacing($size);\n}\n\n@mixin PaddingHorizontal($size) {\n    padding-left: spacing($size);\n    padding-right: spacing($size);\n}\n\n@mixin PaddingVertical($size) {\n    padding-top: spacing($size);\n    padding-bottom: spacing($size);\n}\n"]}