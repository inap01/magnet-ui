{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/nav-rail/nav-rail-link.scss","../../../../src/styles/components/nav-rail/_mixins.scss","../../../../src/styles/components/nav-rail/_variables.scss","../../../../src/styles/lib/_shapes.scss","../../../../src/styles/lib/_typography.scss","../../../../src/styles/lib/_spacing.scss","../../../../src/styles/lib/_transition.scss"],"names":[],"mappings":"AAMA,sBCWI,kBACA,oBACA,sBACA,mBACA,uBACA,YACA,eACA,WCpBiB,KDqBjB,UCrBiB,KDsBjB,UCtBiB,KCUb,kCCTJ,eACA,gBACA,iBACA,iBC6BA,eACA,kBAwBA,iBACA,kBJ7BA,6BACI,WACA,kBACA,MACA,SACA,OACA,QACA,sBACA,8BACA,UKhBJ,WARiB,8CASjB,YAHiB,QLsBjB,mCACI,WAGJ,oCACI,WD3CJ,qDCgDA,mBAEA,4DACI,aD7CR,mDACI,wBAEA,gFACI,mCACA,wBAGJ,kFACI,wBAKR,kDACI,wBAEA,+EACI,mCACA,wBAGJ,iFACI","file":"nav-rail-link.css","sourcesContent":["@use \"../../lib/design-tokens\";\n\n@use \"./mixins\";\n@use \"./variables\";\n\n// Basic styles\n.magnet-nav-rail-link {\n    @include mixins.NavRailLink();\n\n    &.magnet-nav-rail-link--disabled {\n        @include mixins.NavRailLinkDisabled();\n    }\n}\n\n// Light Theme\n.theme-light.magnet-nav-rail .magnet-nav-rail-link {\n    color: design-tokens.getTokenColor(primary, light);\n\n    &.magnet-nav-rail-link--active {\n        background-color: design-tokens.getTokenColor(primary-container, light);\n        color: design-tokens.getTokenColor(on-primary-container, light);\n    }\n\n    &.magnet-nav-rail-link--disabled {\n        color: design-tokens.getTokenColor(disabled, light);\n    }\n}\n\n// Dark theme\n.theme-dark.magnet-nav-rail .magnet-nav-rail-link {\n    color: design-tokens.getTokenColor(primary, dark);\n\n    &.magnet-nav-rail-link--active {\n        background-color: design-tokens.getTokenColor(primary-container, dark);\n        color: design-tokens.getTokenColor(on-primary-container, dark);\n    }\n\n    &.magnet-nav-rail-link--disabled {\n        color: design-tokens.getTokenColor(disabled, dark);\n    }\n}\n","@use \"../../lib/shapes\";\n@use \"../../lib/spacing\";\n@use \"../../lib/transition\";\n@use \"../../lib/typography\";\n\n@use \"./variables\";\n\n@mixin NavRail() {\n    display: flex;\n    flex-direction: column;\n    width: variables.$nav-rail-width;\n    height: 100%;\n    @include spacing.PaddingVertical(variables.$nav-rail-padding-vertical);\n    @include spacing.PaddingHorizontal(variables.$nav-rail-padding-horizontal);\n}\n\n@mixin NavRailLink() {\n    position: relative;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    cursor: pointer;\n    min-height: variables.$nav-rail-link-size;\n    min-width: variables.$nav-rail-link-size;\n    max-width: variables.$nav-rail-link-size;\n    @include shapes.Shape(md);\n    @include typography.Typography(label);\n    @include spacing.MarginVertical(1);\n    @include spacing.PaddingHorizontal(\n        variables.$nav-rail-link-padding-horizontal\n    );\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        border-radius: inherit;\n        background-color: currentColor;\n        opacity: 0;\n        @include transition.Transition((opacity));\n    }\n\n    &:hover:before {\n        opacity: 0.1;\n    }\n\n    &:active:before {\n        opacity: 0.2;\n    }\n}\n\n@mixin NavRailLinkDisabled() {\n    cursor: not-allowed;\n\n    &:before {\n        content: none;\n    }\n}\n","$nav-rail-width: 80px;\n$nav-rail-padding-vertical: 6;\n$nav-rail-padding-horizontal: 4;\n\n$nav-rail-link-size: 48px;\n$nav-rail-link-padding-horizontal: 2;\n","@use \"sass:map\";\n\n@use \"../variables/shapes\";\n\n@function shape($size) {\n    @return map.get(shapes.$shape-sizes, $size);\n}\n\n@mixin Shape($size) {\n    @if ($size == \"none\") {\n        border-radius: 0;\n    } @else if ($size == \"full\") {\n        border-radius: 999px;\n    } @else {\n        border-radius: shape($size) shape($size) shape($size) shape($size);\n    }\n}\n\n@mixin ShapeTop($size) {\n    border-radius: shape($size) shape($size) 0 0;\n}\n\n@mixin ShapeBottom($size) {\n    border-radius: 0 0 shape($size) shape($size);\n}\n\n@mixin ShapeLeft($size) {\n    border-radius: shape($size) 0 0 shape($size);\n}\n\n@mixin ShapeRight($size) {\n    border-radius: 0 shape($size) shape($size) 0;\n}\n","@use \"sass:map\";\n\n@use \"../variables/typography\";\n\n@mixin Typography($name) {\n    font-size: map-get(map-get(typography.$typography, $name), \"font-size\");\n    font-weight: map-get(map-get(typography.$typography, $name), \"font-weight\");\n    line-height: map-get(map-get(typography.$typography, $name), \"line-height\");\n    letter-spacing: map-get(\n        map-get(typography.$typography, $name),\n        \"letter-spacing\"\n    );\n}\n\n@mixin CreateTypographyClass($typographyName) {\n    .display-#{$typographyName} {\n        @include Typography($typographyName);\n    }\n}\n","@use \"sass:map\";\n\n@use \"../variables/spacing\";\n\n@function spacing($size) {\n    @if ($size == \"auto\") {\n        @return auto;\n    }\n    @return spacing.$spacing * $size;\n}\n\n@mixin Margin($size) {\n    margin: spacing($size);\n}\n\n@mixin MarginTop($size) {\n    margin-top: spacing($size);\n}\n\n@mixin MarginBottom($size) {\n    margin-bottom: spacing($size);\n}\n\n@mixin MarginLeft($size) {\n    margin-left: spacing($size);\n}\n\n@mixin MarginRight($size) {\n    margin-right: spacing($size);\n}\n\n@mixin MarginHorizontal($size) {\n    margin-left: spacing($size);\n    margin-right: spacing($size);\n}\n\n@mixin MarginVertical($size) {\n    margin-top: spacing($size);\n    margin-bottom: spacing($size);\n}\n\n@mixin Padding($size) {\n    padding: spacing($size);\n}\n\n@mixin PaddingTop($size) {\n    padding-top: spacing($size);\n}\n\n@mixin PaddingBottom($size) {\n    padding-bottom: spacing($size);\n}\n\n@mixin PaddingLeft($size) {\n    padding-left: spacing($size);\n}\n\n@mixin PaddingRight($size) {\n    padding-right: spacing($size);\n}\n\n@mixin PaddingHorizontal($size) {\n    padding-left: spacing($size);\n    padding-right: spacing($size);\n}\n\n@mixin PaddingVertical($size) {\n    padding-top: spacing($size);\n    padding-bottom: spacing($size);\n}\n","@mixin Transition(\n    $prop,\n    $time: 300ms,\n    $easing: cubic-bezier(0.4, 0, 0.2, 1),\n    $delay: 0s\n) {\n    $willChange: ();\n    $transition: ();\n    @for $i from 1 through length($prop) {\n        @for $j from 0 to (length($prop)) - (length($time)) {\n            $time: join($time, nth($time, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($easing)) {\n            $easing: join($easing, nth($easing, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($delay)) {\n            $delay: join($delay, nth($delay, -1));\n        }\n\n        $transition: append(\n            $transition,\n            (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),\n            $separator: comma\n        );\n\n        $willChange: append($willChange, nth($prop, $i), $separator: comma);\n    }\n    transition: $transition;\n    will-change: $willChange;\n}\n"]}