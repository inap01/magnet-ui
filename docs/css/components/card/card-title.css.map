{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/card/card-title.scss","../../../../src/styles/components/card/_mixins.scss","../../../../src/styles/lib/_spacing.scss","../../../../src/styles/lib/_typography.scss"],"names":[],"mappings":"AAGA,mBC6BI,aACA,uBCaA,iBAIA,mBAYA,kBACA,mBC1DA,eACA,gBACA,iBACA","file":"card-title.css","sourcesContent":["@use 'variables';\n@use 'mixins';\n\n.magnet-card-title {\n    @include mixins.CardTitle();\n}\n","@use \"../../lib/shapes\";\n@use \"../../lib/spacing\";\n@use \"../../lib/transition\";\n@use \"../../lib/typography\";\n\n@use \"./variables\";\n\n@mixin Card() {\n    position: relative;\n    border-width: thin;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    outline: none;\n    text-decoration: none;\n    overflow-wrap: break-word;\n    white-space: normal;\n    @include shapes.Shape(lg);\n    @include transition.Transition((width, height));\n\n    &.magnet-card--outlined {\n        background-color: transparent;\n        border: 1px solid;\n    }\n\n    &.magnet-card--disabled {\n        cursor: default;\n    }\n}\n\n@mixin CardTitle() {\n    display: flex;\n    align-items: flex-start;\n    @include spacing.PaddingTop(variables.$card-title-padding-top);\n    @include spacing.PaddingBottom(variables.$card-title-padding-bottom);\n    @include spacing.PaddingHorizontal(\n        variables.$card-title-padding-horizontal\n    );\n    @include typography.Typography(variables.$card-title-typography);\n}\n\n@mixin CardBody() {\n    @include spacing.Padding(variables.$card-body-padding);\n}\n\n@mixin CardActions() {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    @include spacing.PaddingHorizontal(\n        variables.$card-actions-padding-horizontal\n    );\n    @include spacing.PaddingVertical(variables.$card-actions-padding-vertical);\n\n    > .magnet-button {\n        @include spacing.MarginLeft(2);\n    }\n}\n","@use \"sass:map\";\n\n@use \"../variables/spacing\";\n\n@function spacing($size) {\n    @if ($size == \"auto\") {\n        @return auto;\n    }\n    @return spacing.$spacing * $size;\n}\n\n@mixin Margin($size) {\n    margin: spacing($size);\n}\n\n@mixin MarginTop($size) {\n    margin-top: spacing($size);\n}\n\n@mixin MarginBottom($size) {\n    margin-bottom: spacing($size);\n}\n\n@mixin MarginLeft($size) {\n    margin-left: spacing($size);\n}\n\n@mixin MarginRight($size) {\n    margin-right: spacing($size);\n}\n\n@mixin MarginHorizontal($size) {\n    margin-left: spacing($size);\n    margin-right: spacing($size);\n}\n\n@mixin MarginVertical($size) {\n    margin-top: spacing($size);\n    margin-bottom: spacing($size);\n}\n\n@mixin Padding($size) {\n    padding: spacing($size);\n}\n\n@mixin PaddingTop($size) {\n    padding-top: spacing($size);\n}\n\n@mixin PaddingBottom($size) {\n    padding-bottom: spacing($size);\n}\n\n@mixin PaddingLeft($size) {\n    padding-left: spacing($size);\n}\n\n@mixin PaddingRight($size) {\n    padding-right: spacing($size);\n}\n\n@mixin PaddingHorizontal($size) {\n    padding-left: spacing($size);\n    padding-right: spacing($size);\n}\n\n@mixin PaddingVertical($size) {\n    padding-top: spacing($size);\n    padding-bottom: spacing($size);\n}\n","@use \"sass:map\";\n\n@use \"../variables/typography\";\n\n@mixin Typography($name) {\n    font-size: map-get(map-get(typography.$typography, $name), \"font-size\");\n    font-weight: map-get(map-get(typography.$typography, $name), \"font-weight\");\n    line-height: map-get(map-get(typography.$typography, $name), \"line-height\");\n    letter-spacing: map-get(\n        map-get(typography.$typography, $name),\n        \"letter-spacing\"\n    );\n}\n\n@mixin CreateTypographyClass($typographyName) {\n    .display-#{$typographyName} {\n        @include Typography($typographyName);\n    }\n}\n"]}