{"version":3,"sourceRoot":"","sources":["../../../../src/styles/components/overlay/overlay.scss","../../../../src/styles/components/overlay/_mixins.scss","../../../../src/styles/lib/_transition.scss"],"names":[],"mappings":"AAGA,gBCCI,eACA,MACA,SACA,OACA,QACA,UACA,kBCiBA,WARiB,+FASjB,YAHiB,mBFnBjB,yCCSA,kBDLA,qCCSA,mBAIA,6BACI,mCADJ,4BACI","file":"overlay.css","sourcesContent":["@use './mixins';\n\n// Basic Styling\n.magnet-overlay {\n    @include mixins.Overlay();\n\n    &.magnet-overlay--absolute {\n        @include mixins.OverlayAbsolute();\n    }\n\n    &.magnet-overlay--show {\n        @include mixins.OverlayShow();\n    }\n}\n\n// Light Theme\n.theme-light {\n    @include mixins.OverlayTheme(light);\n}\n\n// Dark Theme\n.theme-dark {\n    @include mixins.OverlayTheme(dark);\n}\n","@use \"../../lib/design-tokens\";\n@use \"../../lib/transition\";\n\n@mixin Overlay() {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    opacity: 0;\n    visibility: hidden;\n    @include transition.Transition((opacity, visibility));\n}\n\n@mixin OverlayAbsolute() {\n    position: absolute;\n}\n\n@mixin OverlayShow() {\n    visibility: visible;\n}\n\n@mixin OverlayTheme($colorMode) {\n    .magnet-overlay {\n        background-color: design-tokens.getTokenColor(\n            on-background,\n            $colorMode\n        );\n    }\n}\n","@mixin Transition(\n    $prop,\n    $time: 300ms,\n    $easing: cubic-bezier(0.4, 0, 0.2, 1),\n    $delay: 0s\n) {\n    $willChange: ();\n    $transition: ();\n    @for $i from 1 through length($prop) {\n        @for $j from 0 to (length($prop)) - (length($time)) {\n            $time: join($time, nth($time, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($easing)) {\n            $easing: join($easing, nth($easing, -1));\n        }\n        @for $j from 0 to (length($prop)) - (length($delay)) {\n            $delay: join($delay, nth($delay, -1));\n        }\n\n        $transition: append(\n            $transition,\n            (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),\n            $separator: comma\n        );\n\n        $willChange: append($willChange, nth($prop, $i), $separator: comma);\n    }\n    transition: $transition;\n    will-change: $willChange;\n}\n"]}